version: 2.1

description: |
  A set of commands that will enable interaction with Kubernetes deployments.
  Image : https://hub.docker.com/r/introspectdata/k8s-util
  Source: https://github.com/IntrospectData/circle-ci-orbs/tree/master/k8s-utils

commands:
  authenticate:
    description:
      Command that will be used to authenticate to k8s.
      Required parameters are k8s-ca-cert <string>, k8s-sa-name <string>, k8s-token <string>. These variables are assumed to have corresponding env variables by default.
    parameters:
      k8s-ca-cert:
        type: string
        default: $K8S_CA_CERTIFICATE
        description: Credential string for authing to k8s cluster
      k8s-sa-name:
        type: string
        default: $K8S_SERVICE_ACCOUNT_NAME
        description: SA string for authing to k8s cluster
      k8s-token:
        type: string
        default: $K8S_BEARER_TOKEN
        description: Token string for authing to k8s cluster
      k8s-api-url:
        type: string
        default: $K8S_API_URL
        description: API URL which this will auth to
    steps:
      - run:
          name: set up environment
          command: |
            mkdir -p $HOME/.kube
            export KUBECONFIG=$HOME/.kube/current-cluster
      - run:
          name: configure context
          command: |
            kubectl config set-credentials << parameters.k8s-sa-name >> --token=<< parameters.k8s-token >>
            echo -e "<< parameters.k8s-ca-cert >>" > $HOME/.kube/public_ca.pem
            kubectl config set-cluster current-cluster --server=<< parameters.k8s-api-url >> --certificate-authority=$HOME/.kube/public_ca.pem
            kubectl config set-context current-cluster --cluster=current-cluster --user=<< parameters.k8s-sa-name >>
      - run:
          name: use context
          command: kubectl config use-context current-cluster
  update:
    description:
      Command that will be used to update an existing deployment.
      Required parameters are namespace <string> and deployment_name <string> and defaults to corresponding env variables
    parameters:
      namespace:
        type: string
        default: $K8s_NAMESPACE
        description: namespace in which to deploy
      deployment_name:
        type: string
        default: $K8s_DEPLOYMENT_NAME
        description: Name of the deployment to be updated
    steps:
      - run:
          name: patch deployment
          command: kubectl --insecure-skip-tls-verify -n << parameters.namespace >> patch deployment << parameters.deployment_name >>  -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
  runjob:
    description:
      Runs a parameter defined job within the same namespace.
      Required paramaters are namespace <string>, job_name <string>, image <string> and command <string>
    parameters:
      namespace:
        type: string
        default: $K8s_NAMESPACE
        description: namespace in which to deploy
      job_name:
        type: string
        default: $K8s_JOB_NAME
        description: Name of the job to be ran
      image:
        type: string
        default: $IMAGE_STRING
        description: Image to use for job.
      cfmap:
        type: string
        default: $K8S_JOB_MAP
        description: Configmap to attach to job.
      command:
        type: string
        default: $K8S_JOB_CMD
        description: Content of job to be ran
    steps:
      - run:
          name: runjob
          command: |
            kubectl --insecure-skip-tls-verify -n << parameters.namespace  >> run << parameters.job_name >>-${CIRCLE_SHA1:0:7} --restart=OnFailure --image=<< parameters.image  >> \
            --overrides='{ "spec": { "containers": [ { "envFrom": [ { "configMapRef": { "name": "<< parameters.cfmap >>" } } ] } ] } }' \
            -- /bin/sh -c "<< parameters.command >>"
